* curbside-clojure-ml

=curbside-clojure-ml= is a library used to train and optimize models, as well as to make predictions. It implements the following ML algorithms:
- =lsvm=
- =svm=
- =c4=
- =random-forest=
- =m5p=
- =xgboost=

** Usage

From your application code, you will need to require the =model= interface, as well as all ML algorithm implementations.

#+BEGIN_SRC clojure
(require '[curbside.ml.model]
         '[curbside.ml.all-model-implementations])
#+END_SRC

The =model= namespace offers the following interface, based on the provided algorithm keyword (i.e. =:xgboost=)

- save
- load
- dispose
- train
- evaluate
- optimize-hyperparameters
- infer

** Releasing to Artifactory

We use [[lein-release][https://github.com/relaynetwork/lein-release]] to release artifacts to Artifactory. To use:

1. Export =ARTIFACTORY_USER= and =ARTIFACTORY_PASS=. You can find the values for these in =eng.json= in =curbside-secrets=.
2. Make sure you are on the master branch, and that its remote branch is set to the primary source repository (https://github.com/Curbside/curbside-clojure-ml).
3. Ensure that =pgp-agent= has your password cached so you don't need to be prompted. =lein release= sometimes malfunctions if it is interrupted by the pgp prompt.
4. Run =lein release :patch=. Replace =:patch= with =:minor= or =:major= as needed. This determines which of the version numbers will be changed in project.clj (the version number format is MAJOR.MINOR.PATCH).
